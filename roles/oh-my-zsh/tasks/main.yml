---
- name: install zsh via homebrew
  homebrew:
    name: "zsh"
    update_homebrew: yes 
 
- name: install oh-my-zsh # noqa: latest
  ansible.builtin.git:
    repo: https://github.com/ohmyzsh/ohmyzsh.git
    dest: ~/.oh-my-zsh
    depth: 1
 
- name: install zsh-autosuggestions plugin # noqa: latest
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-autosuggestions
    dest: ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
    depth: 1
 
- name: install zsh-completions plugin # noqa: latest
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-completions
    dest: ~/.oh-my-zsh/custom/plugins/zsh-completions
    depth: 1
 
- name: install zsh-syntax-highlighting plugin # noqa: latest
  ansible.builtin.git:
    repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
    dest: ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
    depth: 1
 
- name: ensure user shell -> zsh 
  become: true
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    shell: /bin/zsh

# - name: install Powerline fonts
#   become: true
#   ansible.builtin.package:
#     state: present
#     name: "{{ powerlinefonts }}"
 
# - name: Install ripgrep
#   become: true
#   ansible.builtin.package:
#     state: present
#     name: ripgrep
 
# - name: Install procs in Arch/Fedora
#   become: true
#   ansible.builtin.package:
#     state: present
#     name: procs
#   when: ansible_os_family != 'Debian'
 
# # unzip is useful for extracting zips
# - name: Install unzip
#   become: true
#   ansible.builtin.package:
#     state: present
#     name: unzip
 
# - name: Install procs in Ubuntu
#   become: true
#   ansible.builtin.unarchive:
#     src: "https://github.com/dalance/procs/releases/download/{{ procsversion }}/procs-{{ procsversion }}-x86_64-linux.zip"
#     dest: /usr/local/bin
#     remote_src: true
#   when: ansible_os_family == 'Debian'
 
# - name: Install dust on Arch
#   become: true
#   ansible.builtin.package:
#     state: present
#     name: dust
#   when: ansible_os_family == 'Archlinux'
 
# # In Ubuntu/Fedora we have to install it from archive
# # so it's better to check if it's already installed
# - name: Check if dust is already installed on Ubuntu/Fedora
#   ansible.builtin.shell: >
#     dust --version
#   register: dust_rc
#   failed_when: false
#   changed_when: false
#   when: ansible_os_family != 'Archlinux'
 
# - name: Install dust on Ubuntu/Fedora
#   become: true
#   ansible.builtin.unarchive:
#     src: "https://github.com/bootandy/dust/releases/download/{{ dustversion }}/dust-{{ dustversion }}-x86_64-unknown-linux-gnu.tar.gz"
#     dest: /usr/local/bin
#     extra_opts:
#     - --strip=1
#     - --wildcards
#     - '*/dust'
#     remote_src: true
#   when: ansible_os_family != 'Archlinux' and dust_rc.rc != 0
 
# - name: Install Google Noto emoji fonts
#   become: true
#   ansible.builtin.package:
#     state: present
#     name: noto-fonts-emoji
#   when: ansible_os_family == 'Archlinux'
 
# # To get "icons" in exa output
# - name: Install Patched font Arimo from nerd-fonts (Arch)
#   become: true
#   ansible.builtin.package:
#     state: present
#     name: ttf-arimo-nerd
#   when: ansible_os_family == 'Archlinux'
 
# - name: Install exa
#   become: true
#   ansible.builtin.package:
#     state: present
#     name: exa
 
# - name: Install fd-find
#   become: true
#   ansible.builtin.package:
#     state: present
#     name: "{{ fdfind }}"
 
# - name: Create link fd to fdfind in Debian
#   become: true
#   ansible.builtin.file:
#     src: '/usr/bin/fdfind'
#     dest: '/usr/bin/fd'
#     state: link
#   when: ansible_os_family == 'Debian'
 
# - name: Install bat
#   become: true
#   ansible.builtin.package:
#     state: present
#     name: bat
 
# - name: Create link bat to batcat in Debian
#   become: true
#   ansible.builtin.file:
#     src: '/usr/bin/batcat'
#     dest: '/usr/bin/bat'
#     state: link
#   when: ansible_os_family == 'Debian' and ansible_distribution_version is version('23.04', '<')
 
# - name: Install zoxide
#   become: true
#   ansible.builtin.package:
#     state: present
#     name: zoxide
 
# # required by the OMZ plugin zsh-interactive-cd
# - name: Install fzf (command-line fuzzy finder)
#   become: true
#   ansible.builtin.package:
#     state: present
#     name: fzf
 
# - name: Tasks for starship
#   ansible.builtin.include_tasks: starship.yml
#   when: with_starship
 
# - name: Tasks for p10k
#   ansible.builtin.include_tasks: p10k.yml
#   when: not with_starship
